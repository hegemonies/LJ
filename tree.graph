digraph AST {
node [shape="box", style="filled", margin="0.1"];
"class0" [label="class\nModAccess=public\nid=Test"];
"init1" [label="INIT\nDataType=int\nid=getMin\nType=FUNC"];
"ARGS2" [label="ARGS"];
"args3"  [label="DataType=int
id=arr
Type=ARRAY"];
"ARGS2" -> "args3" ;
"args4"  [label="DataType=int
id=size
Type=VAR"];
"ARGS2" -> "args4" ;
"init1" -> "ARGS2";
"STATEMENTS5" [label="STATEMENTS"];
"init6" [label="INIT\nDataType=int\nid=i\nType=VAR"];
"VAR7" [label="VAR"];
"EXPRESSION8" [label="EXPRESSION"];
"NUMBER9" [label="NUMBER\n0"];
"EXPRESSION8" -> "NUMBER9";
"VAR7" -> "EXPRESSION8";
"init6" -> "VAR7";
"STATEMENTS5" -> "init6";
"init10" [label="INIT\nDataType=int\nid=min\nType=VAR"];
"VAR11" [label="VAR"];
"EXPRESSION12" [label="EXPRESSION"];
"NUMBER13" [label="NUMBER\n999999"];
"EXPRESSION12" -> "NUMBER13";
"VAR11" -> "EXPRESSION12";
"init10" -> "VAR11";
"STATEMENTS5" -> "init10";
"WHILE14" [label="WHILE"];
"<15" [label="<"];
"ID16" [label="ID\ni"];
"<15" -> "ID16";
"EXPRESSION17" [label="EXPRESSION"];
"ID18" [label="ID\nsize"];
"EXPRESSION17" -> "ID18";
"<15" -> "EXPRESSION17";
"WHILE14" -> "<15";
"IF19" [label="IF"];
"<20" [label="<"];
"CALL_AR_MEM21" [label="CALL_AR_MEM\nid=array"];
"AR_MEM_ID22" [label="AR_MEM_ID\ni"];
"CALL_AR_MEM21" -> "AR_MEM_ID22";
"<20" -> "CALL_AR_MEM21";
"EXPRESSION23" [label="EXPRESSION"];
"ID24" [label="ID\nmin"];
"EXPRESSION23" -> "ID24";
"<20" -> "EXPRESSION23";
"IF19" -> "<20";
"STATEMENTS25" [label="STATEMENTS"];
"EXPRESSION26" [label="EXPRESSION"];
"ATTACHMENT27" [label="ATTACHMENT"];
"EXPRESSION28" [label="EXPRESSION"];
"CALL_AR_MEM29" [label="CALL_AR_MEM\nid=array"];
"AR_MEM_ID30" [label="AR_MEM_ID\ni"];
"CALL_AR_MEM29" -> "AR_MEM_ID30";
"EXPRESSION28" -> "CALL_AR_MEM29";
"ATTACHMENT27" -> "EXPRESSION28";
"EXPRESSION26" -> "ATTACHMENT27";
"STATEMENTS25" -> "EXPRESSION26";
"IF19" -> "STATEMENTS25";
"WHILE14" -> "IF19";
"EXPRESSION31" [label="EXPRESSION"];
"ATTACHMENT32" [label="ATTACHMENT"];
"+33" [label="+"];
"ID34" [label="ID\ni"];
"+33" -> "ID34";
"NUMBER35" [label="NUMBER\n1"];
"+33" -> "NUMBER35";
"ATTACHMENT32" -> "+33";
"EXPRESSION31" -> "ATTACHMENT32";
"WHILE14" -> "EXPRESSION31";
"STATEMENTS5" -> "WHILE14";
"RETURN36" [label="RETURN"];
"EXPRESSION37" [label="EXPRESSION"];
"ID38" [label="ID\nmin"];
"EXPRESSION37" -> "ID38";
"RETURN36" -> "EXPRESSION37";
"STATEMENTS5" -> "RETURN36";
"init1" -> "STATEMENTS5";
"class0" -> "init1";
"init39" [label="INIT\nDataType=int\nid=getMin\nType=FUNC"];
"class0" -> "init39";
"MAINMETHOD40" [label="MAINMETHOD"];
"STATEMENTS41" [label="STATEMENTS"];
"init42" [label="INIT\nDataType=int\nid=array\nType=ARRAY"];
"ARRAY43" [label="ARRAY\nDataType=int"];
"AR_MEM_NUM44" [label="AR_MEM_NUM"];
"NUMBER45" [label="NUMBER\n3"];
"AR_MEM_NUM44" -> "NUMBER45";
"ARRAY43" -> "AR_MEM_NUM44";
"init42" -> "ARRAY43";
"STATEMENTS41" -> "init42";
"=46" [label="="];
"CALL_AR_MEM47" [label="CALL_AR_MEM\nid=array"];
"AR_MEM_NUM48" [label="AR_MEM_NUM"];
"NUMBER49" [label="NUMBER\n0"];
"AR_MEM_NUM48" -> "NUMBER49";
"CALL_AR_MEM47" -> "AR_MEM_NUM48";
"=46" -> "CALL_AR_MEM47";
"EXPRESSION50" [label="EXPRESSION"];
"NUMBER51" [label="NUMBER\n2"];
"EXPRESSION50" -> "NUMBER51";
"=46" -> "EXPRESSION50";
"STATEMENTS41" -> "=46";
"=52" [label="="];
"CALL_AR_MEM53" [label="CALL_AR_MEM\nid=array"];
"AR_MEM_NUM54" [label="AR_MEM_NUM"];
"NUMBER55" [label="NUMBER\n1"];
"AR_MEM_NUM54" -> "NUMBER55";
"CALL_AR_MEM53" -> "AR_MEM_NUM54";
"=52" -> "CALL_AR_MEM53";
"EXPRESSION56" [label="EXPRESSION"];
"NUMBER57" [label="NUMBER\n0"];
"EXPRESSION56" -> "NUMBER57";
"=52" -> "EXPRESSION56";
"STATEMENTS41" -> "=52";
"=58" [label="="];
"CALL_AR_MEM59" [label="CALL_AR_MEM\nid=array"];
"AR_MEM_NUM60" [label="AR_MEM_NUM"];
"NUMBER61" [label="NUMBER\n2"];
"AR_MEM_NUM60" -> "NUMBER61";
"CALL_AR_MEM59" -> "AR_MEM_NUM60";
"=58" -> "CALL_AR_MEM59";
"EXPRESSION62" [label="EXPRESSION"];
"NUMBER63" [label="NUMBER\n3"];
"EXPRESSION62" -> "NUMBER63";
"=58" -> "EXPRESSION62";
"STATEMENTS41" -> "=58";
"init64" [label="INIT\nDataType=int\nid=min\nType=VAR"];
"VAR65" [label="VAR"];
"EXPRESSION66" [label="EXPRESSION"];
"FUNCCAL67" [label="FUNCCAL\nid=getMin"];
"VALUES68" [label="VALUES"];
"ID69" [label="ID\narray"];
"VALUES68" -> "ID69";
"NUMBER70" [label="NUMBER\n3"];
"VALUES68" -> "NUMBER70";
"FUNCCAL67" -> "VALUES68";
"EXPRESSION66" -> "FUNCCAL67";
"VAR65" -> "EXPRESSION66";
"init64" -> "VAR65";
"STATEMENTS41" -> "init64";
"MAINMETHOD40" -> "STATEMENTS41";
"class0" -> "MAINMETHOD40";
}