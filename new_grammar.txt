<Program>: <class>

<modAccessClass>: public | private

<class>: <modAccessClass> class <id> {
        <initList>
        <mainMethod>
    }

<mainMethod>: public static void main(String[] args) { 
        <statementList> 
    }

<id>: <id_head><id_tail>
<id_head>: [_A-Za-z]
<id_tail>: [_A-Za-z0-9]<id_tail> | E

<loop>: while (<expression>) {
        <statementList>
    }

<rvalue>: <number> | <str_const> | <id>

<argsInitListChanger>: <argsInitList> | E

<argsInitList>: <dataType> <rvalue> | <argsInitList>, <argsInitList>

<argsCallListChanger>: <argsCallList> | E

<argsCallList>: <rvalue> | <argsCallList>, <argsCallList>

<valueExpr>: <id> |
    <id>[<number>] |
    <id>() |
    <number> |
    <str_const>

<conditional>: if (<expression>) {
        <statementList>
    }

<nativeDataType>: int | char

<initList>: <init> <initList> | E

<init>: <nativeDataType> <id> <forkInit>

<forkInit>: 
    (<argsInitListChanger>) {
        <statementList>
    } | 
    = <valueExpr>; |
    [<number>] = new <nativeDataType>[<number>];

<statementList>: <statement> <statementList> | E

<number>: <number_head><number_tail>
<number_tail>: [0-9]<number_tail> | E
<number_head>: [1-9]

<str_const>: /-\(-_-)/-\

<condition>: < | > | == | != | <= | >=

<operator>: + | - | * | / | %

<logicOperator>: && | ||

<statement>: { <statement> } |
    <loop> |
    <conditional> |
    <expression>; |
    <init>; |

<expression>: <valueExpr> <condition> <valueExpr> |
    <expr> <logicOperator> <expr> | 
    <id> | 
    <id>[<number>] | 
    <id>() | 
    <id>(<argsCallListChanger>) |
    <id> = <expression> | 
    <number> | 
    <str_const> | 
    <expression> <operator> <expression>